# Generated by Django 4.2.5 on 2023-10-08 18:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StreamingProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo_path', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watchlist_name', models.CharField(max_length=100)),
                ('is_private', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends', models.ManyToManyField(blank=True, to='webapp.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('tmdb_id', models.IntegerField(db_index=True, null=True, unique=True)),
                ('imdb_id', models.CharField(blank=True, max_length=20, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('poster_path', models.CharField(blank=True, max_length=255, null=True)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('runtime', models.IntegerField(blank=True, null=True)),
                ('tagline', models.CharField(blank=True, max_length=255, null=True)),
                ('trailer_key', models.CharField(blank=True, max_length=255, null=True)),
                ('imdb_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('tmdb_popularity', models.CharField(blank=True, max_length=10, null=True)),
                ('rotten_tomatoes_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('metacritic_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('director', models.CharField(blank=True, max_length=255, null=True)),
                ('domestic_box_office', models.CharField(blank=True, max_length=100, null=True)),
                ('now_playing', models.BooleanField(default=False)),
                ('mpa_rating', models.CharField(blank=True, max_length=20, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('recommended_movie_data', models.JSONField(blank=True, default=list)),
                ('letterboxd_rating', models.FloatField(blank=True, null=True)),
                ('genres', models.ManyToManyField(blank=True, to='webapp.genre')),
                ('streaming_providers', models.ManyToManyField(blank=True, related_name='movies', to='webapp.streamingprovider')),
            ],
        ),
        migrations.CreateModel(
            name='WatchlistEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.movie')),
                ('watchlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='webapp.watchlist')),
            ],
            options={
                'unique_together': {('watchlist', 'movie')},
            },
        ),
    ]
