## Python Shell Functions

# Process for the imdb_rating_num that is part of Movies model in models.
from webapp.models import Movie

# Count total movies
total_movie_count = Movie.objects.count()
print(f"Total number of movies: {total_movie_count}")

# Initialize counters
running_total_count = 0
success_running_count = 0

# Process each movie
for movie in Movie.objects.iterator():
    if movie.imdb_rating and '/' in movie.imdb_rating:
        try:
            # Extract and convert rating
            rating_value = movie.imdb_rating.split('/')[0]
            movie.imdb_rating_num = float(rating_value)
            movie.save()
            success_running_count += 1
        except ValueError:
            # Handle conversion error
            print(f"Failed to convert rating for: {movie.title}")
        running_total_count += 1

# Calculate success rate
success_rate = success_running_count / total_movie_count
print(f"Success rate of converting imdb_ratings to imdb_rating_num: {success_running_count}/{total_movie_count} = {success_rate:.2f}")


# Script number 2
# Import Django setup utilities to set up the environment
import os
import django

# Configure settings for Django project
# Replace 'FilmFocus.settings' with the actual name of your project's settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'FilmFocus.settings')
django.setup()

# Import the Movie model from your models.py
from webapp.models import Movie

# Count the total number of movies
total_movies = Movie.objects.count()

# Count the number of movies that have a poster
movies_with_poster = Movie.objects.filter(poster_path__isnull=False).count()

# Count the number of movies without a poster
movies_without_poster = total_movies - movies_with_poster

# Calculate percentages
percent_with_poster = (movies_with_poster / total_movies) * 100 if total_movies > 0 else 0
percent_without_poster = (movies_without_poster / total_movies) * 100 if total_movies > 0 else 0

# Print the results
print(f"Total movies: {total_movies}")
print(f"Movies with poster: {movies_with_poster} ({percent_with_poster:.2f}%)")
print(f"Movies without poster: {movies_without_poster} ({percent_without_poster:.2f}%)")


